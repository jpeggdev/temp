name: 'QA Deployment'
on:
  push:
    branches:
      - qa
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: qa

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip jq
          pip3 install linode-cli

      - name: Setup Linode Cloud Firewall
        uses: linode/action-linode-cli@v1
        with:
          token: "${{ secrets.LINODE_CLI_TOKEN }}"

      - name: Get GitHub Runner IP
        id: ip
        uses: candidob/get-runner-ip@v1.0.0

      - name: Open Linode Cloud Firewall for GitHub Actions
        env:
          LINODE_FW_ID: "${{ secrets.LINODE_FW_ID }}"
          GH_RUNNER_IP: "${{ steps.ip.outputs.ipv4 }}/32"
        run: |
          bash ./.github/linode.sh -a

      - name: Setup SSH
        id: ssh-setup
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          echo "${{ secrets.LINODEFINGERPRINT }}" >> ~/.ssh/known_hosts

      - name: Create .env file from environment secret
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          echo $ENV_FILE | base64 --decode > .env

      - name: PHP - Setup php version and php extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: imagick

      - name: PHP - Check if composer.json exists
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: 'composer.json'

      - name: PHP - Run composer install if composer.json exists
        if: steps.check_files.outputs.files_exists == 'true'
        run: |
          composer validate --no-check-publish
          composer install --prefer-dist --no-progress --optimize-autoloader --classmap-authoritative

      - name: Deploy to Linode
        uses: burnett01/rsync-deployments@5.2.1
        with:
          switches: -avr --delete --exclude ".git" --exclude "var/"
          path: ./
          remote_path: /home/deployer/hub-qa-api.mycertainpath.com
          remote_host: ${{ secrets.LINODEHOST }}
          remote_port: 22
          remote_user: ${{ secrets.LINODEUSER }}
          remote_key: ${{ secrets.LINODESSHKEY }}

      - name: Clear & Warmup Cache
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.LINODEHOST }}
          username: ${{ secrets.LINODEUSER }}
          key: ${{ secrets.LINODESSHKEY }}
          script: |
            cd /home/deployer/hub-qa-api.mycertainpath.com
            bin/console cache:clear --env=prod
            bin/console cache:warmup --env=prod

      - name: Fix ACLs
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.LINODEHOST }}
          username: ${{ secrets.LINODEUSER }}
          key: ${{ secrets.LINODESSHKEY }}
          script: |
            cd /home/deployer/hub-qa-api.mycertainpath.com
            setfacl -R -m u:www-data:rwx var/cache
            setfacl -R -d -m u:www-data:rwx var/cache

      - name: Run Doctrine Migrations
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.LINODEHOST }}
          username: ${{ secrets.LINODEUSER }}
          key: ${{ secrets.LINODESSHKEY }}
          script: |
            cd /home/deployer/hub-qa-api.mycertainpath.com
            bin/console doctrine:migrations:migrate --no-interaction

      - name: Gracefully Stop Messenger Workers
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.LINODEHOST }}
          username: ${{ secrets.LINODEUSER }}
          key: ${{ secrets.LINODESSHKEY }}
          script: |
            cd /home/deployer/hub-qa-api.mycertainpath.com
            bin/console messenger:stop-workers

      - name: Close Linode Cloud Firewall for GitHub Actions
        env:
          LINODE_FW_ID: "${{ secrets.LINODE_FW_ID }}"
          GH_RUNNER_IP: "${{ steps.ip.outputs.ipv4 }}/32"
        run: |
          bash ./.github/linode.sh -d